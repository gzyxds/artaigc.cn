---
/**
 * Layout组件
 * 这是网站的基础布局组件，提供所有页面的基本HTML结构
 * 包含以下功能：
 * 1. 提供基本的HTML、head和body标签
 * 2. 设置页面的元数据（标题、描述、关键词）
 * 3. 引入全局样式和过渡效果
 * 4. 支持暗黑模式切换
 * 5. 集成百度统计
 * 6. 提供返回顶部按钮
 */
 import '../styles/global.css';
import '../styles/transitions.css';
import { ViewTransitions } from 'astro:transitions';

/**
 * 定义组件属性接口
 * 用于TypeScript类型检查，确保组件接收正确的属性
 * @property {string} title - 页面标题，用于SEO和浏览器标签
 * @property {string} [description] - 页面描述，用于SEO，可选
 * @property {string} [keywords] - 页面关键词，用于SEO，可选
 */
export interface Props {
  title: string;
  description?: string;
  keywords?: string;
}

/**
 * 解构组件属性，设置默认值
 * 从Astro.props中获取传入的属性，并为可选属性设置默认值
 * 这些属性将用于页面的元数据和SEO优化
 */
const { 
  title, 
  description = "专注提供AI系统源代码解决方案的技术团队「超级全能AI变现系统」「AI聊天绘画系统」「AI论文写作系统」拥有PHP和Java两种语言版本，技术实力强，系统体验好支持私有部署，专业团队、售后无忧",
  keywords = "AI系统,AI源码,AI变现系统,AI聊天系统,AI绘画系统,AI论文系统,PHP AI系统,Java AI系统"
} = Astro.props;
---

<!doctype html>
<!-- 使用Alpine.js管理暗黑模式状态 -->
<html lang="zh-CN" x-data="{ darkMode: localStorage.getItem('darkMode') === 'true' }" x-init="$watch('darkMode', val => localStorage.setItem('darkMode', val))" :class="{ 'dark': darkMode }">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <title>{title}</title>
    <!-- 引入本地Material Icons字体 -->
    <link rel="stylesheet" href="/fonts/material-icons/material-icons.css">
    <!-- 启用Astro页面过渡效果 -->
    <ViewTransitions />
  </head>
  <!-- 使用Tailwind设置基础样式和暗黑模式 -->
  <body class="antialiased bg-white dark:bg-secondary-950 text-secondary-900 dark:text-secondary-100 transition-colors duration-300">
    <!-- 页面包装器，用于过渡动画 -->
    <div id="page-wrapper" class="page-transition-wrapper">
      <slot />
    </div>
    <script>
      /**
       * 暗黑模式初始化
       * 检查用户偏好设置，如果没有则使用系统偏好
       */
      if (localStorage.getItem('darkMode') === null) {
        // 检查系统偏好
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          localStorage.setItem('darkMode', 'true');
          document.documentElement.classList.add('dark');
        } else {
          localStorage.setItem('darkMode', 'false');
        }
      }

      /**
       * 页面过渡效果处理
       * 在页面加载完成后添加过渡类
       */
      document.addEventListener('astro:page-load', () => {
        // 这在初始页面加载和每次导航后运行
        const pageWrapper = document.getElementById('page-wrapper');
        if (pageWrapper) {
          pageWrapper.classList.add('page-loaded');
        }
      });

      /**
       * 页面切换前处理
       * 在新页面内容被替换前移除过渡类
       */
      document.addEventListener('astro:before-swap', () => {
        // 这在新页面内容被替换之前运行
        const pageWrapper = document.getElementById('page-wrapper');
        if (pageWrapper) {
          pageWrapper.classList.remove('page-loaded');
        }
      });

      /**
       * 百度统计代码
       */
      var _hmt = _hmt || [];
      (function() {
        var hm = document.createElement("script");
        hm.src = "https://hm.baidu.com/hm.js?93a7b9a145222f9b7109d643a0c58f8d";
        var s = document.getElementsByTagName("script")[0]; 
        s.parentNode?.insertBefore(hm, s);
      })();
    </script>
    <!-- 引入过渡动画脚本 -->
    <script src="../scripts/transitions.js"></script>
    <!-- 返回顶部按钮 - 优化样式和交互效果 -->
  <button id="back-to-top" class="fixed bottom-24 right-10 p-3 bg-gradient-to-r from-blue-500 to-blue-600 dark:from-blue-400 dark:to-blue-500 text-white rounded-full shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300 ease-in-out opacity-0 scale-90 backdrop-blur-sm border border-blue-400/30 dark:border-blue-300/30 z-50">
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
    </svg>
  </button>

  <script>
    /**
     * 返回顶部按钮功能增强
     * 添加平滑滚动和改进的显示/隐藏动画
     */
    document.addEventListener('astro:page-load', () => {
      const backToTop = document.getElementById('back-to-top');
      let scrollTimer;
      let lastScrollY = window.scrollY;
      
      // 优化的滚动事件处理，使用节流技术减少事件触发频率
      const handleScroll = () => {
        if (scrollTimer) return;
        
        scrollTimer = setTimeout(() => {
          // 检测滚动方向和位置
          const currentScrollY = window.scrollY;
          const scrollingDown = currentScrollY > lastScrollY;
          lastScrollY = currentScrollY;
          
          if (currentScrollY > 300) {
            backToTop.classList.add('opacity-100', 'scale-100');
            backToTop.classList.remove('opacity-0', 'scale-90');
            
            // 如果向下滚动且已经显示，添加一点动画效果
            if (scrollingDown) {
              backToTop.classList.add('pulse');
              setTimeout(() => backToTop.classList.remove('pulse'), 500);
            }
          } else {
            backToTop.classList.remove('opacity-100', 'scale-100');
            backToTop.classList.add('opacity-0', 'scale-90');
          }
          
          scrollTimer = null;
        }, 100);
      };
      
      window.addEventListener('scroll', handleScroll);
      
      // 点击事件 - 平滑滚动到顶部并添加点击反馈
      backToTop.addEventListener('click', () => {
        backToTop.classList.add('active');
        
        window.scrollTo({
          top: 0,
          behavior: 'smooth'
        });
        
        // 滚动完成后移除活动状态
        setTimeout(() => {
          backToTop.classList.remove('active');
        }, 500);
      });
    });
  </script>
  
  <style>
    /* 返回顶部按钮的动画效果 */
    #back-to-top.pulse {
      animation: pulse 0.5s ease-in-out;
    }
    
    #back-to-top.active {
      transform: scale(0.9);
    }
    
    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.1); }
      100% { transform: scale(1); }
    }
  </style>
</body>
</html>
