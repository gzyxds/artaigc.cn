---
/**
 * 轮播组件 - 高性能版本
 *
 * 功能特性：
 * - 8秒自动播放，支持暂停/恢复
 * - PC端左侧标题导航，移动端底部指示器
 * - 触摸滑动支持
 * - 底部悬浮卡片展示
 * - 完全响应式设计
 *
 * @component Carousel
 */

/**
 * 轮播幻灯片数据接口
 */
interface CarouselSlide {
  /** 幻灯片ID */
  id: number;
  /** 排序序号 */
  order: number;
  /** 主标题 */
  title: string;
  /** 副标题 */
  subtitle: string;
  /** 详细描述 */
  description: string;
  /** 图片路径 */
  imagePath: string;
  /** 图片alt文本 */
  imageAlt: string;
  /** 主按钮文本 */
  primaryButtonText: string;
  /** 主按钮链接 */
  primaryButtonHref: string;
}

/**
 * 底部卡片数据接口
 */
interface ProductCard {
  /** 卡片ID */
  id: number;
  /** 卡片标题 */
  title: string;
  /** 卡片描述 */
  description: string;
  /** 图标名称 */
  icon: string;
  /** 卡片样式 */
  style: string;
  /** 卡片类型 */
  type?: string;
  /** 背景颜色类名 */
  bgColor?: string;
}

/**
 * 组件Props接口
 */
export interface Props {
  /** 自动播放间隔时间（毫秒） */
  autoplayInterval?: number;
  /** 是否启用自动播放 */
  autoplay?: boolean;
  /** 幻灯片数据 */
  slides?: CarouselSlide[];
  /** 卡片数据 */
  cards?: ProductCard[];
}

// 默认轮播数据配置
const defaultSlides: CarouselSlide[] = [
  {
    id: 1, order: 1, title: '全方位AI解决方案', subtitle: '智能AI系统 · 一站式企业级服务',
    description: '支持AI数字人、知识库、聊天绘画、论文创作等多种AI应用，为企业提供专业安全的AI服务，助力数字化转型升级',
    imagePath: '/assets/carousel5.webp', imageAlt: '全方位AI解决方案',
    primaryButtonText: '立即体验', primaryButtonHref: '/demo'
  },
  {
    id: 2, order: 2, title: 'AI数字人系统', subtitle: '数字人克隆技术 · 声音形象双克隆',
    description: '支持声音克隆、形象克隆、数字人合成等功能，为企业主、个人博主打造专属数字人IP，实现24小时在线服务',
    imagePath: '/assets/carouseszr.webp', imageAlt: 'AI数字人系统',
    primaryButtonText: '了解详情', primaryButtonHref: '/human'
  },
  {
    id: 3, order: 3, title: '企业知识库系统', subtitle: '智能问答平台 · 文档秒变知识库',
    description: '企业可以上传产品文档、合同内容等信息，完成训练后提供智能问答服务，提高企业内部信息流动性和客户服务效率',
    imagePath: '/assets/carousel3.webp', imageAlt: '企业知识库系统',
    primaryButtonText: '立即咨询', primaryButtonHref: '/ai'
  },
  {
    id: 4, order: 4, title: 'AI聊天绘画系统', subtitle: '创意无限可能 · 文字秒出高清图',
    description: '集成先进的AI绘画技术，支持文字生成图片、图片编辑、创意设计等功能，为用户提供强大的AI创作工具',
    imagePath: '/assets/carousel4.webp', imageAlt: 'AI聊天绘画系统',
    primaryButtonText: '开始创作', primaryButtonHref: '/chat'
  }
];

// 默认卡片数据配置
const defaultCards: ProductCard[] = [
  { id: 1, title: 'AI数字人', description: '声音形象克隆，24小时在线', icon: 'person', style: 'modern' },
  { id: 2, title: '知识库系统', description: '智能问答，企业文档管理', icon: 'library_books', style: 'rounded' },
  { id: 3, title: '聊天绘画', description: 'AI创作，文字生成图片', icon: 'palette', style: 'gradient' },
  { id: 4, title: '源码定制', description: 'PHP&Java双版本，私有部署，专业团队技术支持', icon: 'code', style: 'extended', type: 'special', bgColor: 'bg-blue-600' }
];

// 设置组件Props，支持外部数据传入
const {
  autoplayInterval = 8000,
  autoplay = true,
  slides = defaultSlides,
  cards = defaultCards
} = Astro.props as Props;

// 序列化数据供Alpine.js使用
const slidesData = JSON.stringify(slides);
const cardsData = JSON.stringify(cards);

// 性能优化配置
const touchThreshold = 50;
const transitionDuration = 300;
---

<style scoped>
  .carousel-container {
    position: relative;
    width: 100%;
    height: 75vh;
    min-height: 450px;
    max-height: 600px;
    overflow: visible;
    margin-bottom: 120px;
  }

  .carousel-bg {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    max-height: 700px;
    object-fit: cover;
    transition: opacity 0.8s ease-in-out;
    overflow: hidden;
    border-radius: 0;
  }

  @keyframes progressBar {
    from { width: 0%; }
    to { width: 100%; }
  }

  .title-button {
    border-radius: 8px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .title-button:hover {
    transform: translateY(-2px);
    box-shadow: 8px 8px 25px 0 rgba(55,99,170,0.15);
  }

  @media (min-width: 1024px) {
    .lg-show { display: block; }
    .mobile-only { display: none; }
  }

  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }

  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  @media (max-width: 768px) {
    .carousel-container {
      height: 50vh;
      min-height: 320px;
      max-height: 450px;
      margin-bottom: 80px;
    }
  }
</style>

<div class="carousel-container"
  x-data=`{
    slides: ${slidesData},
    cards: ${cardsData},
    active: 0,
    isPlaying: ${autoplay},
    progressKey: 0,
    timer: null,
    autoplayInterval: ${autoplayInterval},
    touchThreshold: ${touchThreshold},
    touchStartX: 0,

    init() {
      this.startAutoPlay();
      this.setupTouchEvents();

      // 页面卸载时清理定时器
      window.addEventListener('beforeunload', () => this.destroy());
    },

    destroy() {
      if (this.timer) {
        clearInterval(this.timer);
        this.timer = null;
      }
    },

    startAutoPlay() {
      if (!this.isPlaying) return;
      this.destroy(); // 清理现有定时器
      this.timer = setInterval(() => {
        if (this.isPlaying && document.visibilityState === 'visible') {
          this.next();
        }
      }, this.autoplayInterval);
    },

    next() {
      this.active = (this.active + 1) % this.slides.length;
      this.progressKey++;
      this.startAutoPlay();
    },

    prev() {
      this.active = this.active === 0 ? this.slides.length - 1 : this.active - 1;
      this.progressKey++;
      this.startAutoPlay();
    },

    goTo(index) {
      if (index === this.active) return; // 避免重复切换
      this.active = index;
      this.progressKey++;
      this.startAutoPlay();
    },

    setupTouchEvents() {
      this.$el.addEventListener('touchstart', e => {
        this.touchStartX = e.touches[0].clientX;
      }, { passive: true });

      this.$el.addEventListener('touchend', e => {
        const diffX = this.touchStartX - e.changedTouches[0].clientX;
        if (Math.abs(diffX) > this.touchThreshold) {
          diffX > 0 ? this.next() : this.prev();
        }
      }, { passive: true });
    },

    pause() {
      this.isPlaying = false;
      this.destroy();
    },

    resume() {
      this.isPlaying = true;
      this.startAutoPlay();
    }
  }`
  @mouseenter="pause()"
   @mouseleave="resume()"
>
  <!-- 背景图片层 -->
  <div class="absolute inset-0 z-0">
    <template x-for="(slide, index) in slides" :key="slide.id">
      <img
        :src="slide.imagePath"
        :alt="slide.imageAlt"
        class="carousel-bg"
        :class="{ 'opacity-100': index === active, 'opacity-0': index !== active }"
        :loading="index <= 1 ? 'eager' : 'lazy'"
      />
    </template>
  </div>

  <!-- 内容层 -->
  <div class="absolute inset-0 z-10 flex items-center">
    <div class="container-custom w-full flex flex-col lg:flex-row">

      <!-- PC端标题列表 -->
      <div class="lg-show hidden lg:block w-64 lg:w-72 xl:w-80 flex-shrink-0">
        <div class="flex flex-col space-y-4">
          <template x-for="(slide, index) in slides" :key="slide.id">
            <button
              @click="goTo(index)"
              class="title-button group relative text-left bg-gradient-to-b from-white to-gray-50 p-3 sm:p-4 border-2 border-white shadow-[8px_8px_20px_0_rgba(55,99,170,0.1)] max-w-[200px] sm:max-w-[250px]"
              :class="{ 'border-blue-300 -translate-y-1 shadow-[8px_8px_25px_0_rgba(55,99,170,0.15)]': active === index }"
            >
              <!-- 标题内容 -->
              <div class="relative">
                <!-- 标题行：序号与主标题在同一行 -->
                <div class="flex items-baseline gap-2 mb-1">
                  <!-- 简约序号 -->
                  <span
                    class="text-sm lg:text-base font-bold transition-colors duration-300 flex-shrink-0"
                    :class="active === index ? 'text-blue-600' : 'text-gray-400 group-hover:text-gray-500'"
                    x-text="String(slide.order).padStart(2, '0') + '.'"
                  ></span>

                  <!-- 主标题 -->
                  <h3
                    class="text-sm lg:text-base font-bold leading-tight transition-colors duration-300 flex-1"
                    :class="active === index ? 'text-gray-900' : 'text-gray-800 group-hover:text-gray-900'"
                    x-text="slide.title"
                  ></h3>
                </div>

                <!-- 副标题 -->
                 <div>
                    <p
                      class="text-xs leading-relaxed line-clamp-2 transition-colors duration-300"
                      :class="active === index ? 'text-gray-600' : 'text-gray-500 group-hover:text-gray-600'"
                      x-text="slide.subtitle"
                    ></p>
                 </div>
               </div>

              <!-- 进度条 -->
              <div
                class="absolute bottom-0 left-0 right-0"
                x-show="active === index"
              >
                <div
                  :key="progressKey"
                  class="h-px bg-blue-500"
                  :style="isPlaying ? 'width: 100%; animation: progressBar 8000ms linear infinite;' : 'width: 0%;'"
                ></div>
              </div>

              <!-- 激活指示器 -->
              <div
                class="absolute right-2 top-1/2 -translate-y-1/2 w-1 h-8 bg-blue-500 transition-all duration-300"
                :class="{ 'opacity-100': active === index, 'opacity-0': active !== index }"
              ></div>
            </button>
          </template>
        </div>
      </div>

      <!-- 轮播内容 -->
      <div class="flex-1 max-w-3xl mt-1 sm:mt-2 lg:mt-12 xl:mt-16 px-2 sm:px-0">
        <template x-for="(slide, index) in slides" :key="slide.id">
          <div x-show="index === active" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100">
            <h1
              class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl xl:text-6xl font-bold text-blue-600 leading-tight mb-3 sm:mb-4"
              x-text="slide.title"
            ></h1>
            <h2
              class="text-sm sm:text-base md:text-lg lg:text-xl xl:text-2xl font-medium text-black leading-relaxed mb-4 sm:mb-6"
              x-text="slide.subtitle"
            ></h2>
            <p
              class="text-sm sm:text-base lg:text-lg text-black leading-relaxed max-w-2xl mb-6 sm:mb-8"
              x-text="slide.description"
            ></p>

            <!-- 按钮组 -->
            <div class="flex flex-row gap-3 sm:gap-4 mb-16 sm:mb-20 lg:mb-0">
              <a
                :href="slide.primaryButtonHref"
                class="px-4 py-2.5 sm:px-6 sm:py-3 lg:px-8 lg:py-4 bg-blue-600 text-white font-medium hover:bg-blue-700 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 text-sm sm:text-base rounded-lg flex items-center"
              >
                <svg class="w-4 h-4 sm:w-5 sm:h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7"></path>
                </svg>
                <span x-text="slide.primaryButtonText"></span>
              </a>

              <button
                @click="document.getElementById('qr-modal')?.classList.add('active')"
                class="px-4 py-2.5 sm:px-6 sm:py-3 lg:px-8 lg:py-4 bg-white/90 backdrop-blur-sm text-black font-medium border border-gray-300 hover:bg-white hover:border-gray-400 transition-all duration-300 shadow-md hover:shadow-lg text-sm sm:text-base rounded-lg flex items-center"
              >
                <svg class="w-4 h-4 sm:w-5 sm:h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                </svg>
                联系客服
              </button>
            </div>
          </div>
        </template>
      </div>
    </div>
  </div>





  <!-- 底部悬浮卡片 -->
  <div class="absolute bottom-0 left-0 right-0 z-50 transform translate-y-1/2">
    <!-- PC端卡片 -->
    <div class="hidden lg:flex justify-center items-center gap-4 container-custom">
      <template x-for="card in cards" :key="card.id">
        <div
          class="transition-all duration-300 hover:-translate-y-1 cursor-pointer border-2 border-white shadow-[0_6px_20px_#dce0e8] rounded-md overflow-hidden outline-1 outline-gray-200 hover:shadow-lg hover:outline-gray-300"
          :class="card.style === 'extended' ? 'flex-[2] max-w-[420px] ' + (card.bgColor || 'bg-gradient-to-r from-blue-500 to-blue-600') : 'flex-1 bg-gradient-to-b from-gray-100 to-white'"
        >
          <div
            class="flex flex-col items-start text-left"
            :class="card.style === 'extended' ? 'px-4 pt-2.5 pb-5' : 'p-4'"
          >
            <h3
              class="font-bold flex items-center gap-3 text-lg mb-2"
              :class="card.type === 'special' ? 'text-white' : 'text-gray-900'"
            >
              <i
                class="material-icons flex-shrink-0 w-6 h-6"
                :class="card.type === 'special' ? 'text-white' : 'text-blue-600'"
                x-text="card.icon"
              ></i>
              <span x-text="card.title"></span>
            </h3>
            <p
              class="text-base leading-relaxed"
              :class="card.type === 'special' ? 'text-white/90' : 'text-gray-600'"
              x-text="card.description"
            ></p>
          </div>
        </div>
      </template>
    </div>

    <!-- 移动端卡片 -->
    <div class="lg:hidden px-4">
      <div class="grid grid-cols-2 gap-3 pb-2">
        <template x-for="card in cards" :key="card.id">
          <div class="border-2 border-white dark:border-gray-700 shadow-[0_6px_20px_#dce0e8] dark:shadow-[0_4px_6px_-1px_rgba(0,0,0,0.3)] rounded-md overflow-hidden outline-1 outline-gray-200 transition-all duration-300 hover:shadow-lg hover:outline-gray-300 dark:hover:shadow-[0_10px_15px_-3px_rgba(0,0,0,0.4)] cursor-pointer"
            :class="card.type === 'special' ? (card.bgColor || 'bg-gradient-to-r from-blue-500 to-blue-600') : 'bg-gradient-to-b from-gray-100 to-white dark:bg-gray-800'">
            <div class="p-3">
              <h3
                class="font-bold flex items-center gap-2 text-sm mb-1.5"
                :class="card.type === 'special' ? 'text-white' : 'text-gray-900 dark:text-white'"
              >
                <i
                  class="material-icons flex-shrink-0 w-5 h-5"
                  :class="card.type === 'special' ? 'text-white' : 'text-blue-600 dark:text-blue-400'"
                  x-text="card.icon"
                ></i>
                <span x-text="card.title"></span>
              </h3>
              <p
                class="text-xs line-clamp-2"
                :class="card.type === 'special' ? 'text-white/90' : 'text-gray-600 dark:text-gray-300'"
                x-text="card.description"></p>
            </div>
          </div>
        </template>
      </div>
    </div>
  </div>
</div>
