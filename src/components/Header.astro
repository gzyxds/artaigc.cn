---
/**
 * Header组件 - 优化版本
 * 网站的顶部导航栏组件，提供网站的主要导航功能
 * 优化内容：减少代码冗余，提升性能，简化数据结构
 */

import astroLogo from '../assets/logo.svg';

/**
 * 获取logo的URL - 处理Astro的SVG导入类型
 */
const logoUrl = typeof astroLogo === 'string' ? astroLogo : astroLogo.src;

/**
 * 优化的图标定义 - 使用更简洁的路径
 */
const icons = {
  user: "M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2M12 7a4 4 0 1 0 0-8 4 4 0 0 0 0 8z",
  brain: "M12 2a3 3 0 0 0-3 3 3 3 0 0 0-3 3v1a3 3 0 0 0 3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0 3-3V8a3 3 0 0 0-3-3 3 3 0 0 0-3-3z",
  chat: "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z",
  edit: "M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z",
  target: "M12 2a10 10 0 1 0 0 20 10 10 0 0 0 0-20zM12 6a6 6 0 1 0 0 12 6 6 0 0 0 0-12zM12 10a2 2 0 1 0 0 4 2 2 0 0 0 0-4z",
  monitor: "M2 3h20v14H2zM8 21h8M12 17v4",
  lightbulb: "M9 21h6M12 17v4M12 3a6 6 0 0 1 6 6c0 3-2 5.5-2 8H8c0-2.5-2-5-2-8a6 6 0 0 1 6-6z",
  shield: "M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z",
  chevron: "M19 9l-7 7-7-7",
  arrow: "M9 5l7 7-7 7",
  menu: "M4 6h16M4 12h16M4 18h16",
  close: "M6 18L18 6M6 6l12 12",
  sun: "M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z",
  moon: "M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
};

/**
 * 优化的菜单项接口 - 移除未使用的color字段
 */
interface MenuItem {
  name: string;
  url: string;
  icon: keyof typeof icons;
  desc: string;
  target?: string;
}

/**
 * 菜单数据 - 合并相似配置，减少重复
 */
const menuData = {
  products: [
    { name: "数字分身", url: "/human", icon: "user", desc: "智能数字人解决方案" },
    { name: "全能知识库", url: "/ai", icon: "lightbulb", desc: "企业级全能AI平台" },
    { name: "聊天绘画", url: "/chat", icon: "chat", desc: "智能对话与创作" },
    { name: "论文创作", url: "/paper", icon: "edit", desc: "智能论文写作助手" },
    { name: "产品中心", url: "/shop", icon: "target", desc: "全部产品导航" },
    { name: "产品演示", url: "/demo", icon: "monitor", desc: "在线体验中心" },
    { name: "AI提示词", url: "/tips", icon: "lightbulb", desc: "AI提示词大全" },
    { name: "授权中心", url: "https://console.cloudcvm.com/home.htm", icon: "shield", desc: "授权管理与使用", target: "_blank" },
  ],
  docs: [
    { name: "项目文档", url: "https://doc.artaigc.cn/", icon: "lightbulb", desc: "5分钟快速上手", target: "_blank" },
    { name: "飞书文档", url: "https://rwm01l8tn3x.feishu.cn/wiki/VqNCwBO0KiqWIWkSfdHcDigGnZg?from=from_copylink", icon: "monitor", desc: "详细功能说明", target: "_blank" },
    { name: "数字分身", url: "https://doc.artaigc.cn/human/", icon: "user", desc: "数字人部署文档", target: "_blank" },
    { name: "全能知识库", url: "https://doc.artaigc.cn/work/deployment/demo.html", icon: "brain", desc: "企业知识库数文档", target: "_blank" },
    { name: "聊天绘画", url: "https://doc.artaigc.cn/chat/", icon: "chat", desc: "聊天绘画企业知识库数文档", target: "_blank" },
    { name: "论文创作", url: "https://doc.artaigc.cn/Paper/deployment/bt.html", icon: "edit", desc: "论文创作文档", target: "_blank" },
  ],
  support: [
    { name: "更新日志", url: "/changelog", icon: "shield", desc: "获取最新更新" },
    { name: "联系我们", url: "/contact", icon: "chat", desc: "获取专业支持服务" },
    { name: "集成与API", url: "/integrations", icon: "monitor", desc: "连接您喜爱的工具" },
    { name: "合作伙伴", url: "/cooperate", icon: "user", desc: "查看合作机会" },
    { name: "渠道合作", url: "/channel", icon: "target", desc: "渠道合作与加盟" },
    { name: "APP下载", url: "/app", icon: "lightbulb", desc: "多终端APP下载" },
  ]
} as const;

/**
 * 优化的图标组件 - 减少DOM节点
 */
const Icon = ({ name, className = "w-5 h-5" }: { name: keyof typeof icons; className?: string }) => (
  `<svg class="${className}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="${icons[name]}"/></svg>`
);
---

<!-- 主导航栏 -->
<header class="sticky top-0 z-50 bg-white/80 backdrop-blur-md border-b border-gray-200 dark:bg-gray-900/80 dark:border-gray-700">
  <div class="w-full px-4 sm:px-6 lg:px-8 xl:px-12 2xl:px-16">
    <div class="flex justify-between items-center h-16">
      <!-- Logo区域 -->
      <div class="flex items-center">
        <a href="/" class="flex items-center space-x-2">
          <img src={logoUrl} alt="艺创AI" class="h-8 w-8" />
          <span class="text-xl font-bold text-gray-900 dark:text-white">艺创AI</span>
        </a>
      </div>

      <!-- 桌面端导航菜单 -->
      <nav class="hidden lg:flex items-center space-x-2 xl:space-x-4 2xl:space-x-6">
        <a href="/" class="nav-link">首页</a>

        <!-- 优化的下拉菜单组件 -->
        {Object.entries(menuData).map(([key, items]) => {
          const menuName = key === 'products' ? '产品中心' : key === 'docs' ? '产品文档' : '支持与服务';
          return (
            <div class="relative group">
              <button class="nav-link flex items-center whitespace-nowrap">
                {menuName}
                <svg class="ml-1 h-4 w-4 transition-transform duration-200 group-hover:rotate-180" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={icons.chevron} />
                </svg>
              </button>
              <div class="absolute left-0 mt-3 w-[520px] rounded-2xl bg-white dark:bg-gray-800 shadow-2xl border border-gray-100 dark:border-gray-700 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
                <div class="p-6">
                  <div class="grid grid-cols-2 gap-4">
                    {items.map((item) => (
                      <a href={item.url} target={(item as MenuItem).target || undefined} class="menu-item group/item">
                        <div class="flex items-center space-x-4 p-4 rounded-xl hover:bg-gradient-to-r hover:from-blue-50 hover:to-indigo-50 dark:hover:from-blue-900/30 dark:hover:to-indigo-900/30 transition-all duration-300 border border-transparent hover:border-blue-100 dark:hover:border-blue-800/50 hover:shadow-lg">
                          <span class="flex h-12 w-12 items-center justify-center rounded-xl bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/50 dark:to-indigo-900/50 text-blue-600 dark:text-blue-400 group-hover/item:scale-110 group-hover/item:shadow-lg transition-all duration-300 border border-blue-100 dark:border-blue-800/50">
                            <span class="w-6 h-6" set:html={Icon({ name: item.icon, className: "w-6 h-6" })}></span>
                          </span>
                          <div class="flex-1 min-w-0">
                            <div class="font-semibold text-gray-900 dark:text-gray-100 group-hover/item:text-blue-600 dark:group-hover/item:text-blue-400 transition-colors duration-300 text-sm">
                              {item.name}
                            </div>
                            <div class="text-xs text-gray-500 dark:text-gray-400 truncate mt-1 group-hover/item:text-gray-600 dark:group-hover/item:text-gray-300 transition-colors duration-300">
                              {item.desc}
                            </div>
                          </div>
                          <svg class="h-5 w-5 text-gray-300 dark:text-gray-600 opacity-0 group-hover/item:opacity-100 group-hover/item:text-blue-500 dark:group-hover/item:text-blue-400 transition-all duration-300 transform group-hover/item:translate-x-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={icons.arrow} />
                          </svg>
                        </div>
                      </a>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          );
        })}

        <a href="/pricing" class="nav-link">产品价格</a>
        <a href="/company" class="nav-link">关于我们</a>
        <a href="/contact" class="nav-link">联系我们</a>
        <a href="/blog" class="nav-link">最新动态</a>
      </nav>

      <!-- 右侧操作区域 -->
      <div class="flex items-center space-x-2 xl:space-x-3">
        <!-- 暗黑模式切换按钮 -->
        <button
          x-on:click="darkMode = !darkMode"
          class="p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-200"
          aria-label="切换暗黑模式"
        >
          <svg x-show="!darkMode" class="h-5 w-5 text-gray-600 dark:text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={icons.moon} />
          </svg>
          <svg x-show="darkMode" class="h-5 w-5 text-gray-600 dark:text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={icons.sun} />
          </svg>
        </button>

        <!-- 用户操作按钮 -->
        <div class="hidden md:flex items-center space-x-2">
          <a
            href="https://console.cloudcvm.com/cart/goodsList.htm?fpg_id=61&spg_id=20"
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center px-4 xl:px-6 py-2 xl:py-2.5 bg-blue-600 hover:bg-blue-700 text-white font-medium xl:font-semibold text-sm xl:text-base shadow-lg hover:shadow-xl transition-all rounded-lg"
          >
            <span>立即购买</span>
          </a>

          <a
            href="https://console.cloudcvm.com/cart/goodsList.htm?fpg_id=61&spg_id=20"
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center px-4 xl:px-6 py-2 xl:py-2.5 bg-white dark:bg-gray-800 text-gray-800 dark:text-white font-medium xl:font-semibold text-sm xl:text-base shadow-lg hover:shadow-xl transition-all rounded-lg border border-gray-200 dark:border-gray-600"
          >
            <span>登录/注册</span>
          </a>
        </div>

        <!-- 移动端菜单按钮 -->
        <button
          x-data="{open: false}"
          x-on:click="open = !open; $dispatch('toggle-mobile-menu', {open})"
          class="lg:hidden p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-200"
          aria-label="切换菜单"
        >
          <svg x-bind:class="{'hidden': open, 'block': !open}" class="h-6 w-6 text-gray-600 dark:text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={icons.menu} />
          </svg>
          <svg x-bind:class="{'block': open, 'hidden': !open}" class="h-6 w-6 text-gray-600 dark:text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={icons.close} />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- 优化的移动端菜单 -->
  <div
    x-data="{ open: false }"
    x-on:toggle-mobile-menu.window="open = $event.detail.open"
    x-show="open"
    x-transition:enter="transition ease-out duration-200"
    x-transition:enter-start="opacity-0 -translate-y-4"
    x-transition:enter-end="opacity-100 translate-y-0"
    x-transition:leave="transition ease-in duration-150"
    x-transition:leave-start="opacity-100 translate-y-0"
    x-transition:leave-end="opacity-0 -translate-y-4"
    class="lg:hidden fixed inset-x-0 top-16 z-50 w-full overflow-hidden bg-white dark:bg-gray-900 border-t border-gray-100 dark:border-gray-800"
    x-cloak
  >
    <nav class="relative max-h-[calc(100vh-4rem)] overflow-y-auto p-4 space-y-4">
      <div class="space-y-4">
        <a href="/" class="mobile-nav-item">首页</a>

        <!-- 移动端菜单项 -->
        {Object.entries(menuData).map(([key, items]) => {
          const menuName = key === 'products' ? '产品中心' : key === 'docs' ? '产品文档' : '支持与服务';
          return (
            <div x-data="{expanded: false}" class="space-y-2">
              <button
                x-on:click="expanded = !expanded"
                class="mobile-nav-item w-full flex items-center justify-between group"
              >
                <span x-bind:class="{'text-primary-600 dark:text-primary-400': expanded}">{menuName}</span>
                <svg
                  x-bind:class="{'rotate-180 text-primary-600 dark:text-primary-400': expanded}"
                  class="h-5 w-5 transition-all duration-200 group-hover:text-primary-600 dark:group-hover:text-primary-400"
                  fill="none" viewBox="0 0 24 24" stroke="currentColor"
                >
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={icons.chevron} />
                </svg>
              </button>

              <div x-show="expanded" x-collapse x-cloak>
                <div class="pt-2 pl-4 border-l-2 border-primary-100 dark:border-primary-900">
                  <div class="grid grid-cols-2 gap-2">
                    {items.map(item => (
                      <a href={item.url} target={(item as MenuItem).target || undefined} class="mobile-menu-item">
                        <div class="flex flex-col">
                          <div class="flex items-center space-x-2">
                            <span class="w-4 h-4 text-blue-600 dark:text-blue-400" set:html={Icon({ name: item.icon, className: "w-4 h-4" })}></span>
                            <span class="font-medium text-blue-600 dark:text-blue-400">{item.name}</span>
                          </div>
                          <span class="text-xs text-gray-500 mt-1">{item.desc}</span>
                        </div>
                      </a>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          );
        })}

        <a href="/pricing" class="mobile-nav-item">产品价格</a>
        <a href="/company" class="mobile-nav-item">关于我们</a>
        <a href="/contact" class="mobile-nav-item">联系我们</a>
        <a href="/blog" class="mobile-nav-item">最新动态</a>
      </div>

      <!-- 移动端用户操作 -->
      <div class="pt-6 space-y-4">
        <a
          href="https://auth.cnai.art/regist.htm"
          class="block w-full text-center px-4 py-3 rounded-xl bg-primary-600 hover:bg-primary-700 text-white font-medium transition-colors duration-200"
        >
          会员中心
        </a>
        <a
          href="https://auth.cnai.art/regist.htm"
          class="block w-full text-center px-4 py-3 rounded-xl border border-gray-300 dark:border-gray-600 hover:bg-gray-100 dark:hover:bg-gray-800 text-gray-700 dark:text-gray-300 font-medium transition-colors duration-200"
        >
          登录/注册
        </a>
      </div>
    </nav>
  </div>
</header>

<style>
  .nav-link {
    @apply px-2 lg:px-3 xl:px-4 py-2 rounded-lg text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 font-medium transition-all duration-300 relative overflow-hidden text-sm lg:text-sm xl:text-base whitespace-nowrap;
  }

  .nav-link::after {
    content: '';
    @apply absolute bottom-0 left-0 w-full h-0.5 bg-primary-600 dark:bg-primary-400 transform scale-x-0 transition-transform duration-300 origin-left;
  }

  .nav-link:hover::after {
    @apply scale-x-100;
  }

  .menu-item {
    @apply block w-full transition-all duration-300 hover:scale-[1.02] hover:-translate-y-0.5;
  }

  .mobile-nav-item {
    @apply flex items-center justify-between w-full px-4 py-3 rounded-xl text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-all duration-300 font-medium hover:translate-x-1;
  }

  .mobile-menu-item {
    @apply flex items-center w-full px-4 py-2 rounded-lg text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-all duration-300 hover:translate-x-1;
  }

  [x-cloak] {
    display: none !important;
  }
</style>

<script is:inline>
  // 优化的滚动处理 - 使用requestAnimationFrame和防抖
  let header, lastScrollY = 0, ticking = false;

  function handleScroll() {
    if (!header) header = document.querySelector('header');
    if (!header) return;

    const currentScrollY = window.scrollY;

    if (!ticking) {
      requestAnimationFrame(() => {
        header.classList.toggle('shadow-md', currentScrollY > 20);
        lastScrollY = currentScrollY;
        ticking = false;
      });
      ticking = true;
    }
  }

  // 使用passive监听器优化性能
  window.addEventListener('scroll', handleScroll, { passive: true });
  
  // 初始化
  document.addEventListener('DOMContentLoaded', () => {
    header = document.querySelector('header');
    handleScroll();
  });
</script>
